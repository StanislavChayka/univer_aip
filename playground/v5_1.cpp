#include <iostream>
#include<math.h>
using namespace std;

int main()
{
    // инициализируем переменную х
    float h;
    float x;
    float a;
    float temp_calc_val;

    h = 5;
    x = 4;

    // вычисляем значения синуса внутри модуля
    a = sin(8 * h);

    // если результат отрицательный - умножаем на -1 т.к. нужно число по модулю
    // эти костыли используются т.к. я не знаю как в спп считать число по модулю
    if(a < 0) {
        a = a * -1;
    }

    // прибавляем к вычисленному модулю в числителе 17
    a = a + 17;

    // дальше все вычисления можно записать одним выражением
    // a = pow(a / (log( 1 - ( pow(sin(4),2) * h * cos( pow(h,2) + 18)))/log(x)) ,1/7);
    // но оно выглядит непонятным поэтому я использую временную переменную для выполнения действий в знаменателе по действиям 
    
    // вычислим значение синуса
    temp_calc_val = pow(sin(4),2);

    // умножим на переменную h
    temp_calc_val = temp_calc_val * h;

    // умножим на значение косинуса
    temp_calc_val = temp_calc_val * cos( pow(h,2) + 18);

    // вычтем полученое значение из 1
    temp_calc_val = 1 - temp_calc_val;

    // вычислим логарифм по основанию х из полученного числа
    temp_calc_val = log( temp_calc_val )/log(x);

    // вычислим корень в седьмой степени из частности числителя и знаменателя 
    a = pow(a / temp_calc_val ,1/7);

    // выводим в консоль значение переменной х
    cout << a << endl;

}